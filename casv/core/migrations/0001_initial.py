# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings
import django.utils.timezone
import django.contrib.gis.db.models.fields
import django.core.validators
import django.contrib.auth.models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.CreateModel(
            name='LDAPUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(verbose_name='password', max_length=128)),
                ('last_login', models.DateTimeField(null=True, blank=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(help_text='Designates that this user has all permissions without explicitly assigning them.', default=False, verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='username', unique=True, max_length=30)),
                ('first_name', models.CharField(verbose_name='first name', blank=True, max_length=30)),
                ('last_name', models.CharField(verbose_name='last name', blank=True, max_length=30)),
                ('email', models.EmailField(verbose_name='email address', blank=True, max_length=254)),
                ('is_staff', models.BooleanField(help_text='Designates whether the user can log into this admin site.', default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', blank=True, related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(help_text='Specific permissions for this user.', related_name='user_set', blank=True, related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AreaSoltura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processo', models.IntegerField(null=True, blank=True)),
                ('nome', models.CharField(null=True, verbose_name='Nome da propriedade', blank=True, max_length=255)),
                ('endereco', models.CharField(null=True, verbose_name='Endereço', blank=True, max_length=400)),
                ('uf', models.CharField(null=True, verbose_name='Unidade da Federação', blank=True, max_length=2)),
                ('municipio', models.CharField(null=True, verbose_name='Município', blank=True, max_length=255)),
                ('proprietario', models.CharField(null=True, verbose_name='Nome do proprietário', blank=True, max_length=255)),
                ('cpf', models.CharField(null=True, verbose_name='CPF', blank=True, max_length=11)),
                ('telefone', models.CharField(null=True, blank=True, max_length=15)),
                ('email', models.EmailField(null=True, blank=True, max_length=254)),
                ('area', models.FloatField(null=True, blank=True, verbose_name='Área da Propriedade (ha)')),
                ('arl_app', models.FloatField(null=True, blank=True, verbose_name='Área de reserva legal e proteção permanente')),
                ('bioma', models.CharField(null=True, verbose_name='Bioma', blank=True, max_length=255)),
                ('fitofisionomia', models.CharField(null=True, blank=True, max_length=255)),
                ('taxon', models.CharField(null=True, blank=True, max_length=255)),
                ('conservacao', models.NullBooleanField()),
                ('conectividade', models.NullBooleanField()),
                ('uc', models.NullBooleanField()),
                ('agua', models.NullBooleanField()),
                ('atividade', models.CharField(null=True, verbose_name='Atividade Econômica', blank=True, max_length=255)),
                ('documento', models.NullBooleanField()),
                ('mapa', models.NullBooleanField()),
                ('carta', models.NullBooleanField()),
                ('reabilitador', models.NullBooleanField()),
                ('viveiros', models.PositiveSmallIntegerField(null=True, blank=True, verbose_name='Número de viveiros')),
                ('distancia', models.FloatField(null=True, blank=True, verbose_name='Distância até o CETAS mais próximo')),
                ('tempo', models.CharField(null=True, verbose_name='Tempo de viagem ao CETAS mais próximo', blank=True, max_length=5)),
                ('vistoria', models.DateField(null=True, blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4674)),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='area_soltura', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Áreas de Soltura de Animais Silvestres',
                'verbose_name': 'Área de Soltura de Animais Silvestres',
            },
        ),
        migrations.CreateModel(
            name='Asv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(null=True, blank=True)),
                ('n_autex', models.CharField(null=True, verbose_name='Número de Autorização de Extração', blank=True, max_length=30)),
                ('uf', models.CharField(null=True, verbose_name='UF', blank=True, max_length=2)),
                ('fito', models.CharField(null=True, blank=True, max_length=60)),
                ('nom_prop', models.CharField(null=True, verbose_name='Nome do Proprietário', blank=True, max_length=60)),
                ('cpfj_prop', models.CharField(null=True, verbose_name='CPF ou CNPJ do Proprietário', blank=True, max_length=22)),
                ('detentor', models.CharField(null=True, verbose_name='Nome do Detentor', blank=True, max_length=60)),
                ('cpfj_dete', models.CharField(null=True, verbose_name='CPF ou CNPJ do Detentor', blank=True, max_length=22)),
                ('rt', models.CharField(null=True, blank=True, max_length=60)),
                ('cpfj_rt', models.CharField(null=True, blank=True, max_length=22)),
                ('area_ha', models.FloatField(null=True, blank=True, verbose_name='Área da Propriedade (ha)')),
                ('lenha_st', models.FloatField(null=True, blank=True)),
                ('tora_m', models.FloatField(null=True, blank=True)),
                ('torete_m', models.FloatField(null=True, blank=True)),
                ('mourao_m', models.FloatField(null=True, blank=True)),
                ('data_autex', models.DateField(null=True, blank=True, verbose_name='Data de Autorização de Extração')),
                ('valido_ate', models.DateField(null=True, blank=True, verbose_name='Data de Validade da Autorização')),
                ('municipio', models.CharField(null=True, verbose_name='Município', blank=True, max_length=40)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4674)),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='asv', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Autorizações de Supressão de Vegetação',
                'verbose_name': 'Autorização de Supressão de Vegetação',
            },
        ),
        migrations.CreateModel(
            name='AsvMataAtlantica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processo', models.IntegerField(null=True, blank=True)),
                ('uf', models.CharField(null=True, verbose_name='Unidade da Federação', blank=True, max_length=2)),
                ('municipio', models.CharField(null=True, verbose_name='Município', blank=True, max_length=255)),
                ('empreendedor', models.CharField(null=True, blank=True, max_length=255)),
                ('tipo_empreendimento', models.CharField(null=True, verbose_name='Tipo de Empreendimento', blank=True, max_length=255)),
                ('cpfj', models.CharField(null=True, verbose_name='CPF ou CNPJ do Empreendedor', blank=True, max_length=22)),
                ('area_supressao_total', models.FloatField(null=True, blank=True, verbose_name='Área Total de Supressão (ha)')),
                ('area_supressao_veg_primaria', models.FloatField(null=True, blank=True, verbose_name='Área de Supressão de Vegetação Primária (ha)')),
                ('area_supressao_estagio_medio', models.FloatField(null=True, blank=True, verbose_name='Área de Supressão em Estágio Médio (ha)')),
                ('area_supressao_estagio_avancado', models.FloatField(null=True, blank=True, verbose_name='Área de Supressão em Estágio Avançado (ha)')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4674)),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='asvma', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Autorizações de Supressão de Vegetação -\n            Mata Atlântica',
                'verbose_name': 'Autorização de Supressão de Vegetação - Mata Atlântica',
            },
        ),
        migrations.CreateModel(
            name='AutoInfracaoOEMA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proc', models.CharField(null=True, blank=True, max_length=30)),
                ('num_ai', models.CharField(null=True, blank=True, max_length=20)),
                ('num_tei', models.CharField(null=True, blank=True, max_length=20)),
                ('area_ha', models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)),
                ('desc', models.CharField(null=True, blank=True, max_length=2500)),
                ('legislacao', models.CharField(null=True, blank=True, max_length=100)),
                ('status', models.CharField(null=True, blank=True, max_length=100)),
                ('nome', models.CharField(null=True, blank=True, max_length=100)),
                ('cpfj', models.CharField(null=True, blank=True, max_length=20)),
                ('municipio', models.CharField(null=True, blank=True, max_length=250)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4674, blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='infracao', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Autos de Infração OEMA',
                'verbose_name': 'Auto de Infração OEMA',
            },
        ),
        migrations.CreateModel(
            name='CompensacaoMataAtlantica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processo', models.IntegerField(null=True, blank=True)),
                ('uf', models.CharField(null=True, verbose_name='Unidade da Federação', blank=True, max_length=2)),
                ('municipio', models.CharField(null=True, verbose_name='Município', blank=True, max_length=255)),
                ('empreendedor', models.CharField(null=True, blank=True, max_length=255)),
                ('tipo_empreendimento', models.CharField(null=True, verbose_name='Tipo de Empreendimento', blank=True, max_length=255)),
                ('cpfj', models.CharField(null=True, verbose_name='CPF ou CNPJ do Empreendedor', blank=True, max_length=22)),
                ('area_compensacao_total', models.FloatField(null=True, blank=True, verbose_name='Área de Compensação (ha)')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4674)),
                ('tipo_compensacao', models.CharField(null=True, blank=True, max_length=12)),
                ('area_compensacao_veg_primaria', models.FloatField(null=True, blank=True, verbose_name='Área de Compensação de Vegetação Primária (ha)')),
                ('area_compensacao_estagio_inicial', models.FloatField(null=True, blank=True, verbose_name='Área de Compensação em Estágio Inicial (ha)')),
                ('area_compensacao_estagio_medio', models.FloatField(null=True, blank=True, verbose_name='Área de Compensação em Estágio Médio (ha)')),
                ('area_compensacao_estagio_avancado', models.FloatField(null=True, blank=True, verbose_name='Área de Compensação em Estágio Avançado (ha)')),
                ('observacao', models.TextField(null=True, blank=True, verbose_name='Observação')),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='compensacao', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Áreas de Compensação - Mata Atlântica',
                'verbose_name': 'Área de Compensação - Mata Atlântica',
            },
        ),
        migrations.CreateModel(
            name='DadosAnuenciaMataAtlantica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processo', models.IntegerField(null=True, unique=True, blank=True)),
                ('uf', models.CharField(null=True, verbose_name='Unidade da Federação', blank=True, max_length=2)),
                ('municipio', models.CharField(null=True, verbose_name='Município', blank=True, max_length=255)),
                ('empreendedor', models.CharField(null=True, blank=True, max_length=255)),
                ('tipo_empreendimento', models.CharField(null=True, verbose_name='Tipo de Empreendimento', blank=True, max_length=255)),
                ('cpfj', models.CharField(null=True, verbose_name='CPF ou CNPJ do Empreendedor', blank=True, max_length=22)),
                ('area_empreendimento_total', models.FloatField(null=True, blank=True, verbose_name='Área Total de Empreendimento (ha)')),
                ('area_empreendimento_veg_primaria', models.FloatField(null=True, blank=True, verbose_name='Área Empreendida em Vegetação Primária (ha)')),
                ('area_empreendimento_estagio_medio', models.FloatField(null=True, blank=True, verbose_name='Área de Empreendimento em Estágio Médio (ha)')),
                ('area_empreendimento_estagio_avancado', models.FloatField(null=True, blank=True, verbose_name='Área de Empreendimento em Estágio Avançado (ha)')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_modificacao_ibama', models.DateTimeField(null=True, blank=True, verbose_name='Data de modificação pelo Ibama')),
                ('cpf_modificacao_ibama', models.CharField(null=True, verbose_name='Cpf de Modificação do Ibama', blank=True, max_length=13)),
                ('urbano_metropolitano', models.CharField(verbose_name='Local Urbarno', max_length=5)),
                ('status', models.CharField(verbose_name='Status', max_length=30)),
                ('observacao', models.TextField(null=True, blank=True, verbose_name='Observação')),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='dadosanuencia', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Dados de Anuência - Mata Atlântica',
                'verbose_name': 'Dados de Anuência - Mata Atlântica',
            },
        ),
        migrations.CreateModel(
            name='EmbargoOEMA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proc', models.CharField(null=True, blank=True, max_length=30)),
                ('num_ai', models.CharField(null=True, blank=True, max_length=20)),
                ('num_tei', models.CharField(null=True, blank=True, max_length=20)),
                ('area_ha', models.DecimalField(null=True, max_digits=8, decimal_places=2, blank=True)),
                ('desc', models.CharField(null=True, blank=True, max_length=2500)),
                ('legislacao', models.CharField(null=True, blank=True, max_length=100)),
                ('status', models.CharField(null=True, blank=True, max_length=100)),
                ('nome', models.CharField(null=True, blank=True, max_length=100)),
                ('cpfj', models.CharField(null=True, blank=True, max_length=20)),
                ('municipio', models.CharField(null=True, blank=True, max_length=250)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4674, blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='embargo', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Embargos OEMA',
                'verbose_name': 'Embargo OEMA',
            },
        ),
        migrations.CreateModel(
            name='GeomAnuenciaConcedidaMataAtlantica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4674, verbose_name='Geometria')),
                ('data_criacao', models.DateTimeField(null=True, auto_now_add=True, verbose_name='Data de Criação')),
                ('processo', models.ForeignKey(to='core.DadosAnuenciaMataAtlantica', blank=True, null=True, to_field='processo')),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='geom_anuencia_concedida', blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Geometrias das Anuências Concedidas',
                'verbose_name': 'Geometria de Anuência Concedida - Mata Atlântica',
            },
        ),
        migrations.CreateModel(
            name='GeomPedidoAnuenciaMataAtlantica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4674, verbose_name='Geometria')),
                ('processo', models.ForeignKey(to='core.DadosAnuenciaMataAtlantica', blank=True, null=True, to_field='processo')),
                ('usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='geom_pedido_anuencia', null=True)),
            ],
            options={
                'verbose_name_plural': 'Geometrias dos Pedidos de Anuência - Mata Atlântica',
                'verbose_name': 'Geometria do Pedido de Anuência - Mata Atlântica',
            },
        ),
        migrations.CreateModel(
            name='UserPermited',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(unique=True, max_length=11)),
            ],
        ),
    ]
